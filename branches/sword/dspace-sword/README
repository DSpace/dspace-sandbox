DSpace SWORD README
===================

This document describes the DSpace implementation of the SWORDd deposit 
standard.  This is an extension to the ATOM Publishing Protocol (APP),
which provides a framework to discover deposit targets, and to deposit packaged
content into remote repositories.

Author: Richard Jones
Date: 14-10-2007

Licence Information
-------------------

Copyright (c) 2007, Aberystwyth University

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

 - Redistributions of source code must retain the above
   copyright notice, this list of conditions and the
   following disclaimer.

 - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in
   the documentation and/or other materials provided with the
   distribution.

 - Neither the name of the Centre for Advanced Software and
   Intelligent Systems (CASIS) nor the names of its
   contributors may be used to endorse or promote products derived
   from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

Installation
------------

1/ Place the dspace-sword module pack in the same directory as the main
   DSpace distribution source

2/ In [dspace]/dspace/pom.xml, ensure that the <modules> section includes
   <modules>../dspace-sword</modules>

3/ Build and install the application as per the DSpace build documentation.

4/ Ensure that you have included the configuration required, as specified
   in the next section

5/ Import the metadata registry entries required using the file
  	config/registries/sword-metadata.xml.
  
6/ Copy the default ingest crosswalk from the file 
   config/crosswalks/sword-swap-ingest.xsl
   into the dspace directory config/crosswalks
   
7/ When deployed you should be able to view your service document at
   the following url:
   
   http://[dspace.hostname]/dspace-sword/servicedocument

Required Configuration
----------------------

Insert the following into the dspace.cfg file to configure
the SWORD installation

#####################################################################
# tell the SWORD METS implementation which package ingester to use
# to install deposited content.  This should refer to one of the
# classes configured for:
#
# plugin.named.org.dspace.content.packager.PackageIngester
#
# The value of sword.mets-ingester.package-ingester tells the 
# system which named plugin for this interface should be used 
# to ingest SWORD METS packages
#
# The default is METS
#
# sword.mets-ingester.package-ingester = METS

# Define the metadata type EPDCX (EPrints DC XML)
# to be handled by the SWORD crosswalk configuration
#
mets.submission.crosswalk.EPDCX = SWORD

# define the stylesheet which will be used by the self-named
# XSLTIngestionCrosswalk class when asked to load the SWORD
# configuration (as specified above).  This will use the
# specified stylesheet to crosswalk the incoming SWAP metadata
# to the DIM format for ingestion
#
crosswalk.submission.SWORD.stylesheet = crosswalks/sword-swap-ingest.xsl

# The base URL of the SWORD deposit.  This is the URL from
# which DSpace will construct the deposit location urls for
# collections.
#
# The default is {dspace.url}/dspace-sword/deposit
#
# In the event that you are not deploying DSpace as the ROOT
# application in the servlet container, this will generate
# incorrect URLs, and you should override the functionality
# by specifying in full as below:
#
# sword.deposit.url = http://www.myu.ac.uk/dspace-sword/deposit

# The metadata field in which to store the updated date for 
# items deposited via SWORD.
#
sword.updated.field = dc.date.updated

# The metadata field in which to store the value of the slug
# header if it is supplied
#
sword.slug.field = dc.identifier.slug

#####################################################################
  
Testing
-------

Supplied along with the source code is a package which can be used for testing.
This consists of a mets.xml file, which is a METS document containing a Dublin 
Core XML section of descriptive metadata which conforms to the SWAP standard.
There are additionally 3 example PDF files.

These files are provided additionally inside a zip file which should form the 
content of a deposit request (example.zip).

These files are all available in the directory: [dspace-sword]/test

Testing can be performed using the separately available SWORD Client

Implementation Notes
--------------------

- DSpace has no equivalent concept for the SWORD term "treatment".  This is 
  therefore always null in the Service Document
  
- The logic of onBehalfOf is as follows:  The list of collections which is
  supplied during a request which is done onBehalfOf another user is the 
  intersection of the lists of collections that the authenticated user can 
  submit to and the list that the onBehalfOf user can submit to.

- This implementation only supports the default PasswordAuthentication
  mechanism for DSpace.  Modifications are required to tie it in to alternative
  authentication mechanisms.
  
- When items are deposited and pass into the DSpace workflow system, they 
  cannot be assigned external identifiers immediately.  Therefore the returned
  id on "Accepted" items will be the front page of the repository on which the 
  deposit happened.  Alternatives to this mechanism are being sought, but may 
  require core DSpace modifications.
  
- If a request is made with an onBehalfOf user supplied, the authentication
  process requires that the username/password pair successfully  authenticate a
  user, and that the onBehalfOf user simply exists in the user database.  If 
  any of these conditions fail, authentication fails.
  
- The DSpace package ingester does not permit for a copy of the orignal package
  to be retained.  To modify this requires changes to the core DSpace which 
  could be considered.  In the mean time, it is not possible to return a link 
  to the original package in the <atom:link> element.